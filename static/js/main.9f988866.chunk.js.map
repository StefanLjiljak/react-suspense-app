{"version":3,"sources":["sample.gif","Api.js","App.js","index.js"],"names":["module","exports","wrapPromise","promise","result","status","suspender","then","res","err","read","fetchUser","console","log","axios","get","data","catch","fetchPosts","resource","userPromise","postsPromise","user","posts","fetchData","ProfileDetails","className","name","username","email","address","city","ProfilePosts","map","post","key","id","title","Spinner","src","spinner","alt","style","width","margin","display","App","fallback","ReactDOM","unstable_createRoot","document","getElementById","render"],"mappings":"kHAAAA,EAAOC,QAAU,IAA0B,oC,6JCWrCC,EAAc,SAACC,GAEjB,IAEIC,EAFAC,EAAS,UAITC,EAAYH,EAAQI,MACpB,SAAAC,GACIH,EAAS,UACTD,EAASI,KAEb,SAAAC,GACIJ,EAAS,QACTD,EAASK,KAIjB,MAAO,CACHC,KADG,WAEC,GAAe,YAAXL,EACA,MAAMC,EACH,GAAe,UAAXD,EACP,MAAMD,EAEN,OAAOA,KAMjBO,EAAY,WAEd,OADAC,QAAQC,IAAI,oBACLC,IACFC,IAAI,gDACJR,MAAK,SAAAC,GAAG,OAAIA,EAAIQ,QAChBC,OAAM,SAAAR,GAAG,OAAIG,QAAQC,IAAIJ,OAI5BS,EAAa,WAEf,OADAN,QAAQC,IAAI,qBACLC,IACFC,IAAI,8CACJR,MAAK,SAAAC,GAAG,OAAIA,EAAIQ,QAChBC,OAAM,SAAAR,GAAG,OAAIG,QAAQC,IAAIJ,O,iBClD5BU,EDHmB,WACrB,IAAMC,EAAcT,IACdU,EAAeH,IACrB,MAAO,CACHI,KAAMpB,EAAYkB,GAClBG,MAAOrB,EAAYmB,ICFVG,GAajB,IAAMC,EAAiB,WACrB,IAAMH,EAAOH,EAASG,KAAKZ,OAE3B,OACE,yBAAKgB,UAAU,uBACb,wBAAIA,UAAU,sBAAsBJ,EAAKK,MACzC,4BACE,yCAAeL,EAAKM,UACpB,sCAAYN,EAAKO,OACjB,qCAAWP,EAAKQ,QAAQC,SAO1BC,EAAe,WACnB,IAAMT,EAAQJ,EAASI,MAAMb,OAE7B,OACE,wBAAIgB,UAAU,cACZ,wBAAIA,UAAU,mBAAkB,iDAC/BH,EAAMU,KAAI,SAAAC,GAAI,OACb,wBAAIR,UAAU,kBAAkBS,IAAKD,EAAKE,IAAKF,EAAKG,YAMtDC,EAAU,kBACd,yBAAKC,IAAKC,IACRC,IAAI,aACJC,MAAO,CAAEC,MAAO,QAASC,OAAQ,OAAQC,QAAS,YAIvCC,EA/Cf,WACE,OACE,yBAAKpB,UAAU,kBACb,kBAAC,WAAD,CAAUqB,SAAU,kBAAC,EAAD,OAClB,kBAAC,EAAD,MACA,kBAAC,EAAD,SCPRC,IAASC,oBAAoBC,SAASC,eAAe,SAASC,OAAO,kBAAC,EAAD,S","file":"static/js/main.9f988866.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sample.d077ebfd.gif\";","import axios from 'axios'\r\n\r\nexport const fetchData = () => {\r\n    const userPromise = fetchUser()\r\n    const postsPromise = fetchPosts()\r\n    return {\r\n        user: wrapPromise(userPromise),\r\n        posts: wrapPromise(postsPromise)\r\n    }\r\n}\r\n\r\nconst wrapPromise = (promise) => {\r\n    // Set initial status\r\n    let status = 'pending'\r\n    // Store result\r\n    let result\r\n    // Wait for promise\r\n    let suspender = promise.then(\r\n        res => {\r\n            status = 'success'\r\n            result = res\r\n        },\r\n        err => {\r\n            status = 'error'\r\n            result = err\r\n        }\r\n    );\r\n\r\n    return {\r\n        read() {\r\n            if (status === 'pending') {\r\n                throw suspender\r\n            } else if (status === 'error') {\r\n                throw result\r\n            } else {\r\n                return result\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst fetchUser = () => {\r\n    console.log('Fetching user...');\r\n    return axios\r\n        .get('https://jsonplaceholder.typicode.com/users/1')\r\n        .then(res => res.data)\r\n        .catch(err => console.log(err))\r\n}\r\n\r\n\r\nconst fetchPosts = () => {\r\n    console.log('Fetching posts...');\r\n    return axios\r\n        .get('https://jsonplaceholder.typicode.com/posts')\r\n        .then(res => res.data)\r\n        .catch(err => console.log(err))\r\n}","import React, { Suspense } from 'react';\nimport './App.css';\nimport { fetchData } from './Api'\nimport spinner from '../src/sample.gif'\n\nconst resource = fetchData()\n\nfunction App() {\n  return (\n    <div className=\"container my-5\">\n      <Suspense fallback={<Spinner />}>\n        <ProfileDetails />\n        <ProfilePosts />\n      </Suspense>\n    </div>\n  );\n}\n\nconst ProfileDetails = () => {\n  const user = resource.user.read()\n\n  return (\n    <div className=\"card card-body my-3\">\n      <h1 className=\"large text-primary\">{user.name}</h1>\n      <ul>\n        <li>Username: {user.username}</li>\n        <li>Email: {user.email}</li>\n        <li>City: {user.address.city}</li>\n      </ul>\n    </div>\n  )\n}\n\n\nconst ProfilePosts = () => {\n  const posts = resource.posts.read()\n\n  return (\n    <ul className=\"list-group\">\n      <li className=\"list-group-item\"><strong>Latest Posts</strong></li>\n      {posts.map(post => (\n        <li className=\"list-group-item\" key={post.id}>{post.title}</li>\n      ))}\n    </ul>\n  )\n}\n\nconst Spinner = () => (\n  <img src={spinner}\n    alt=\"Loading...\"\n    style={{ width: '200px', margin: 'auto', display: \"block\" }}\n  />\n)\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// Enable concurrent mode\nReactDOM.unstable_createRoot(document.getElementById('root')).render(<App />);"],"sourceRoot":""}